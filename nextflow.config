params {
    // input                   = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/github/test-datasets/haplodiff/samplesheet.csv'
    vcf_fasta               = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/ref_data/genomes/hg38/BWAIndex/all_sequences.fa'
    vcf_genome              = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/ref_data/genomes/hg38/BWAIndex/all_sequences.genome'
    meth_fasta              = '/storage1/fs1/dspencer/Active/spencerlab/refdata/hg38/dragen_5mCv4.2.4/hg38_mgi_patch_puC19_Lambda.fa'
    rna_fasta               = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/ref_data/genomes/hg38/BWAIndex/all_sequences.fa'
    population_snps_vcf     = '/storage1/fs1/dspencer/Active/spencerlab/refdata/hg38/variation/gnomAD3.1/gnomad.genomes.v3.1.2.sites.maf0_005.sorted.vcf.gz'
    cpgs_bed                = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/ref_data/annotations/cgi/bioconductor/hg38.cpgs.bed'
    dmrs_bed                = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/projects/asm/analysis/annotations/dmrs_of_interest.bed'
    dmrs_bed_txt            = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/projects/asm/analysis/annotations/dmrs_annotation.txt'
    exons_bed               = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/projects/asm/analysis/annotations/exons_of_interest.bed'
    exons_bed_txt           = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/projects/asm/analysis/annotations/hg38_exons.txt'
    promoters_bed           = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/projects/asm/analysis/annotations/promoters_of_interest.bed'

    stub_path               = '/storage1/fs1/dspencer/Active/spencerlab/mohamed/github/test-datasets/haplodiff/stub-data'
    snpdep_min_count        = 10

    rna_vaf_threshold       = 0.2 // eg. rna_vaf_threshol == 0.2 , only snps with (rna_vaf <= 0.2 | or rna_vaf >= 0.8) will be included in final report
    meth_pval_threshold     = 0.01
}


profiles {
    dhslab       {
        executor.queueSize     = 7
        executor.submitRateLimit = '1/1sec'
        process.executor       = "lsf"
        process.clusterOptions = { "-a 'docker(${task.container})' -q dspencer -G compute-dspencer -g /dspencer/nextflow" }
    }

    test   { includeConfig 'conf/test.config' }
}
